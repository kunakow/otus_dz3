[vagrant@localhost ~]$ sudo -s

Перед началом работы небходимо установить пакет xfsdump
[root@lvm ~]# yum install dfsdump

1. Уменьшить том под / до 8G

Подготовим временный том для / раздела:
[root@localhost vagrant]# pvcreate /dev/sdb
[root@localhost vagrant]# vgcreate vg_root /dev/sdb
[root@localhost vagrant]# lvcreate -n lv_root -l +100%FREE /dev/vg_root

Создадим на нем файловую систему и смонтируем его, чтобы перенести туда данные:
[root@localhost vagrant]# mkfs.xfs /dev/vg_root/lv_root
[root@localhost vagrant]# mount /dev/vg_root/lv_root /mnt

Этой командой скопируем все данные с / раздела в /mnt:
[root@localhost vagrant]# xfsdump -J - /dev/VolGroup00/LogVol00 | xfsrestore -J - /mnt

Затем, переконфигурируем grub для того, чтобы при старте перейти в новый /:
[root@localhost vagrant]# for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done
[root@localhost vagrant]# chroot /mnt/
[root@localhost /]# grub2-mkconfig -o /boot/grub2/grub.cfg

Обновим образ initrd:
[root@localhost /]# cd /boot ; for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g;
> s/.img//g"` --force; done

Чтобы при загрузке был смонтирован нужный root нужно в файле /boot/grub2/grub.cfg заменить rd.lvm.lv=VolGroup00/LogVol00 на rd.lvm.lv=vg_root/lv_root
Перезагружаемся успешно с новым рут томом. Убедиться в этом можно посмотрев вывод lsblk
 
[root@localhost vagrant]# reboot
[vagrant@localhost vagrant]$ sudo -s
 
Теперь нам нужно изменить размер старой VG и вернуть на него рут. Для этого удаляем старый LV размеров в 40G и создаем новый на 8G:
[root@localhost vagrant]# lvremove /dev/VolGroup00/LogVol00
[root@localhost vagrant]# lvcreate -n VolGroup00/LogVol00 -L 8G /dev/VolGroup00

Проделываем на нем те же операции, что и в первый раз:
[root@localhost vagrant]# mkfs.xfs /dev/VolGroup00/LogVol00
[root@localhost vagrant]# mount /dev/VolGroup00/LogVol00 /mnt
[root@localhost vagrant]# xfsdump -J - /dev/vg_root/lv_root | xfsrestore -J - /mnt

Так же как в первый раз переконфигурируем grub, за исключением правки /etc/grub2/grub.cfg:
[root@localhost vagrant]# for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done
[root@localhost vagrant]# chroot /mnt/
[root@localhost /]# grub2-mkconfig -o /boot/grub2/grub.cfg
[root@localhost boot]# cd /boot ; for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g;
s/.img//g"` --force; done

2. Выделить том под /var в зеркало

На свободных дисках создаем зеркало:
[root@localhost boot]# pvcreate /dev/sdc /dev/sdd
[root@localhost boot]# vgcreate vg_var /dev/sdc /dev/sdd
[root@localhost boot]# lvcreate -L 950M -m1 -n lv_var vg_var

Создаем на нем ФС и перемещаем туда /var:
[root@localhost boot]# mkfs.ext4 /dev/vg_var/lv_var
[root@localhost boot]# mount /dev/vg_var/lv_var /mnt
[root@localhost boot]# cp -aR /var/* /mnt/ 

На всякий случай сохраняем содержимое старого var (или же можно его просто удалить):
[root@localhost boot]# mkdir /tmp/oldvar && mv /var/* /tmp/oldvar

Монтируем новый var в каталог /var:
[root@localhost boot]# umount /mnt
[root@localhost boot]#  mount /dev/vg_var/lv_var /var

Правим fstab для автоматического монтирования /var
[root@localhost boot]# echo "`blkid | grep var: | awk '{print $2}'` /var ext4 defaults 0 0" >> /etc/fstab

После чего можно успешно перезагружаться в новый (уменьшенный root) и удалять временную Volume Group:
[root@localhost vagrant]#  lvremove /dev/vg_root/lv_root
[root@localhost vagrant]# vgremove /dev/vg_root
[root@localhost vagrant]# pvremove /dev/sdb

3. Выделить том под /home

Выделяем том под /home по тому же принципу что делали для /var:
[root@localhost vagrant]# lvcreate -n LogVol_Home -L 2G /dev/VolGroup00
[root@localhost vagrant]#  mkfs.xfs /dev/VolGroup00/LogVol_Home
[root@localhost vagrant]# mount /dev/VolGroup00/LogVol_Home /mnt/
[root@localhost vagrant]# cp -aR /home/* /mnt/ 
[root@localhost vagrant]# rm -rf /home/*
[root@localhost vagrant]# umount /mnt
[root@localhost vagrant]# mount /dev/VolGroup00/LogVol_Home /home/
[root@localhost vagrant]#  echo "`blkid | grep Home | awk '{print $2}'` /home xfs defaults 0 0" >> /etc/fstab

Далее работаем со снапшотами:
Сгенерируем файлы в /home/:
[root@localhost vagrant]#  touch /home/file{1..20}

Снять снапшот:
[root@localhost vagrant]#  lvcreate -L 100MB -s -n home_snap /dev/VolGroup00/LogVol_Home

Удалить часть файлов:
[root@localhost vagrant]# rm -f /home/file{11..20}

Процесс восстановления со снапшота:
[root@localhost vagrant]# umount /home
[root@localhost vagrant]#  lvconvert --merge /dev/VolGroup00/home_snap
[root@localhost vagrant]# mount /home

Итог:
[root@localhost vagrant]# lsblk
NAME                       MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                          8:0    0   40G  0 disk 
├─sda1                       8:1    0    1M  0 part 
├─sda2                       8:2    0    1G  0 part /boot
└─sda3                       8:3    0   39G  0 part 
  ├─VolGroup00-LogVol00    253:0    0    8G  0 lvm  /
  ├─VolGroup00-LogVol01    253:1    0  1.5G  0 lvm  [SWAP]
  └─VolGroup00-LogVol_Home 253:2    0    2G  0 lvm  /home
sdb                          8:16   0   10G  0 disk 
sdc                          8:32   0    2G  0 disk 
├─vg_var-lv_var_rmeta_0    253:3    0    4M  0 lvm  
│ └─vg_var-lv_var          253:7    0  952M  0 lvm  /var
└─vg_var-lv_var_rimage_0   253:4    0  952M  0 lvm  
  └─vg_var-lv_var          253:7    0  952M  0 lvm  /var
sdd                          8:48   0    1G  0 disk 
├─vg_var-lv_var_rmeta_1    253:5    0    4M  0 lvm  
│ └─vg_var-lv_var          253:7    0  952M  0 lvm  /var
└─vg_var-lv_var_rimage_1   253:6    0  952M  0 lvm  
  └─vg_var-lv_var          253:7    0  952M  0 lvm  /var
sde                          8:64   0    1G  0 disk
